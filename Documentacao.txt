=========================================================
Documenta√ß√£o: Simulador do Sistema Alerta Cidad√£o Conectado
Arquivo: alerta_cidadao_simulador.py
=========================================================

√çndice:
1. Prop√≥sito do Script
2. Como Executar o Script
3. Par√¢metros Globais Configur√°veis
4. Vis√£o Geral das Fun√ß√µes
   4.1. Fun√ß√µes de Valida√ß√£o de Entrada
   4.2. Fun√ß√µes do Sistema de Alerta
   4.3. Fun√ß√£o Principal
5. Intera√ß√£o com o Usu√°rio
6. Sa√≠da Esperada no Console

--------------------------------------
1. Prop√≥sito do Script
--------------------------------------
O script `alerta_cidadao_simulador.py` simula o backend (a l√≥gica de processamento)
do projeto "Alerta Cidad√£o Conectado". Ele foi desenvolvido para a disciplina de
Computational Thinking Using Python.

Principais funcionalidades:
- Simula a leitura de dados de um sensor de n√≠vel de √°gua.
- Permite que o usu√°rio insira relatos de ocorr√™ncias relacionadas a enchentes.
- Valida as entradas de dados fornecidas pelo usu√°rio.
- Calcula e exibe o status de alerta (Seguro, Aten√ß√£o, Cr√≠tico, Falha Sensor)
  com base nos dados do sensor.
- Processa de forma simplificada os relatos da comunidade para gerar alertas adicionais.
- Apresenta todas as informa√ß√µes e alertas de forma textual no console.

--------------------------------------
2. Como Executar o Script
--------------------------------------
Para executar este script, voc√™ precisa ter o Python instalado em seu sistema.

1. Salve o c√≥digo Python em um arquivo chamado `alerta_cidadao_simulador.py`.
2. Abra um terminal ou prompt de comando.
3. Navegue at√© o diret√≥rio onde voc√™ salvou o arquivo.
4. Execute o seguinte comando:
   python alerta_cidadao_simulador.py

O script iniciar√° e come√ßar√° a interagir com voc√™ atrav√©s do console.

--------------------------------------
3. Par√¢metros Globais Configur√°veis
--------------------------------------
No in√≠cio do script, alguns par√¢metros globais podem ser ajustados para
modificar o comportamento da simula√ß√£o:

- `ALTURA_TOTAL_RESERVATORIO_CM` (float):
  Define a altura total (profundidade) em cent√≠metros do local que est√° sendo
  monitorado (ex: bueiro, pequeno c√≥rrego). O valor padr√£o √© 100.0 cm.
  Este valor √© fundamental para calcular o percentual do n√≠vel da √°gua.

- `LIMIAR_ATENCAO_PERCENT` (float):
  Define o percentual do `ALTURA_TOTAL_RESERVATORIO_CM` a partir do qual o sistema
  entra em estado de "Aten√ß√£o". O valor padr√£o √© 0.30 (30%).

- `LIMIAR_CRITICO_PERCENT` (float):
  Define o percentual do `ALTURA_TOTAL_RESERVATORIO_CM` a partir do qual o sistema
  entra em estado "Cr√≠tico". O valor padr√£o √© 0.70 (70%).

- `DADOS_SENSOR_SIMULADOS` (list de floats):
  Uma lista de valores que simulam as leituras do sensor de n√≠vel de √°gua em cm.
  O script ciclar√° por esta lista para simular a varia√ß√£o do n√≠vel da √°gua ao
  longo do tempo e testar diferentes cen√°rios de alerta (Seguro, Aten√ß√£o,
  Cr√≠tico, Falha Sensor). Voc√™ pode modificar esta lista para criar suas pr√≥prias
  sequ√™ncias de simula√ß√£o.

--------------------------------------
4. Vis√£o Geral das Fun√ß√µes
--------------------------------------

   4.1. Fun√ß√µes de Valida√ß√£o de Entrada
   ------------------------------------
   - `validar_entrada_texto_obrigatorio(prompt_usuario, tamanho_max=150)`:
     Solicita uma entrada de texto ao usu√°rio, garantindo que n√£o seja vazia
     e que n√£o exceda um tamanho m√°ximo. Continua solicitando at√© que uma
     entrada v√°lida seja fornecida.

   - `validar_opcao_lista(prompt_usuario, opcoes_validas)`:
     Apresenta ao usu√°rio uma lista de op√ß√µes v√°lidas (passadas como um
     dicion√°rio) e solicita que ele escolha uma delas. Repete at√© que uma
     op√ß√£o v√°lida seja digitada.

   4.2. Fun√ß√µes do Sistema de Alerta
   ---------------------------------
   - `ler_dados_sensor_simulado(sensor_id="principal")`:
     Simula a leitura de um sensor de n√≠vel de √°gua. Retorna o pr√≥ximo valor da
     lista `DADOS_SENSOR_SIMULADOS` ou um valor aleat√≥rio se a lista estiver vazia.
     Inclui um pequeno atraso para simular o tempo de leitura.

   - `calcular_status_alerta_sensor(nivel_agua_cm, altura_total_cm, limiar_atencao_p, limiar_critico_p)`:
     Recebe o n√≠vel atual da √°gua e os par√¢metros do sistema, e retorna uma
     string indicando o status do alerta ("Seguro", "Aten√ß√£o", "Cr√≠tico" ou
     "Falha Sensor"). A l√≥gica √© baseada nos percentuais de limiar definidos.

   - `coletar_relato_cidadao()`:
     Interage com o usu√°rio para coletar detalhes de uma ocorr√™ncia comunit√°ria
     (tipo, local, descri√ß√£o). Utiliza as fun√ß√µes de valida√ß√£o para garantir
     a qualidade dos dados. Retorna um dicion√°rio com os dados do relato ou
     `None` se o usu√°rio cancelar.

   - `processar_relatos_para_alerta(lista_relatos)`:
     Analisa a lista de relatos comunit√°rios. Nesta vers√£o simplificada, gera uma
     mensagem de alerta se o relato mais recente for de um tipo considerado
     cr√≠tico (ex: "alagamento de via", "n√≠vel subindo rapidamente").

   - `exibir_mensagem_console(mensagem, tipo="INFO")`:
     Formata e exibe mensagens no console, prefixando-as com um indicador de
     tipo (INFO, ALERTA, ERRO, DESTAQUE) para melhor legibilidade.

   4.3. Fun√ß√£o Principal
   ---------------------
   - `main_loop_simulador()`:
     Orquestra a execu√ß√£o do simulador. Cont√©m o loop principal que executa
     os ciclos de monitoramento. Em cada ciclo:
       1. L√™ os dados simulados do sensor.
       2. Calcula e exibe o status de alerta do sensor.
       3. Pergunta ao usu√°rio se deseja registrar uma ocorr√™ncia comunit√°ria.
       4. Se sim, coleta e processa o relato.
       5. Pergunta ao usu√°rio se deseja continuar para o pr√≥ximo ciclo.
     Encerra quando o usu√°rio decide n√£o continuar.

--------------------------------------
5. Intera√ß√£o com o Usu√°rio
--------------------------------------
Durante a execu√ß√£o do script, o usu√°rio interage com o sistema atrav√©s do console:

- **No in√≠cio de cada ciclo:** O script exibe o status atual do sensor.
- **Registro de Ocorr√™ncias:** O script perguntar√° "Deseja registrar uma ocorr√™ncia comunit√°ria neste ciclo? (s/n):".
  - Se o usu√°rio digitar 's' (sim), ele ser√° guiado para fornecer:
    - O tipo da ocorr√™ncia (escolhendo de uma lista numerada).
    - A localiza√ß√£o da ocorr√™ncia (texto livre).
    - Uma breve descri√ß√£o da situa√ß√£o (texto livre).
    - Uma confirma√ß√£o final para enviar o relato.
- **Continua√ß√£o dos Ciclos:** Ao final de cada ciclo de monitoramento, o script perguntar√° "Continuar para o pr√≥ximo ciclo de monitoramento? (s/n):".
  - Se o usu√°rio digitar 's' (sim), um novo ciclo se inicia.
  - Se digitar 'n' (n√£o) ou qualquer outra coisa, o simulador √© encerrado.

As fun√ß√µes de valida√ß√£o garantem que o usu√°rio forne√ßa dados nos formatos esperados, solicitando novas tentativas em caso de erro.

--------------------------------------
6. Sa√≠da Esperada no Console
--------------------------------------
O script produzir√° sa√≠das de texto no console, incluindo:

- Mensagens de boas-vindas e encerramento.
- Indicador do ciclo de monitoramento atual.
- Leituras simuladas do sensor de n√≠vel de √°gua (em cm).
- Status do sistema calculado com base na leitura do sensor (ex: "[INFO ‚ÑπÔ∏è] Status: Nivel SEGURO.", "[ALERTA üî¥] Status do Sistema (baseado no sensor): Cr√≠tico").
- Prompts para entrada de dados do usu√°rio ao registrar ocorr√™ncias.
- Mensagens de confirma√ß√£o ou cancelamento de registro de ocorr√™ncias.
- Alertas gerados a partir dos relatos comunit√°rios (ex: "[ALERTA üî¥] Alerta Comunit√°rio Urgente: ...").
- Mensagens de erro caso a entrada do usu√°rio seja inv√°lida.

As mensagens s√£o prefixadas para indicar seu tipo (INFO, ALERTA, ERRO, DESTAQUE) para facilitar a leitura e compreens√£o do que est√° acontecendo na simula√ß√£o.